services:
  database:
    image: postgis/postgis:16-3.4-alpine
    container_name: postgis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bonn"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bonn
    networks:
      - database
    ports:
      - 5434:5432
    volumes:
      - database:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - database
    restart: unless-stopped

  # geoserver:
  #   container_name: geoserver
  #   build: ./geoserver
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - database

  # geoserver:
  #   image: docker.osgeo.org/geoserver:2.25.2
  #   container_name: geoserver
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - database

  # pygeoapi:
  #   build: ./pygeoapi
  #   container_name: pygeoapi
  #   ports:
  #     - "5001:5000"
  #   networks:
  #     - database
  
  # frontend:
  #   build: ./frontend
  #   container_name: frontend
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - database

  # fastapi-sqlalchemy:
  #   container_name: fastapi-sqlalchemy
  #   build: ./fastapi-sqlalchemy
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - postgres

networks:
  database:
    driver: bridge
  geoserver:
    driver: bridge
  # pygeoapi:
  #   driver: bridge

volumes:
  database:
  pgadmin: